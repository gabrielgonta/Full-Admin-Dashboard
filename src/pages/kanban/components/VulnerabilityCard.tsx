import { Draggable } from '@hello-pangea/dnd'
import { format, differenceInDays } from  'date-fns'
import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Checkbox } from "@/components/ui/checkbox"
import { Button } from '@/components/custom/button'
import { MoreVertical, Trash2, Edit3, Flag, Clock } from 'lucide-react'
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip"
import { Vulnerability, Severity, User } from '../data/schema'

interface VulnerabilityCardProps {
  item: Vulnerability
  index: number
  isSelected: boolean
  toggleSelection: (itemId: string) => void
  setSelectedVulnerability: (vulnerability: Vulnerability) => void
  setIsDetailDialogOpen: (isOpen: boolean) => void
  handleDeleteVulnerability: (vulnerabilityId: string) => void
}
export const initialUsers: User[] = [
  { id: '1', name: 'Alice', avatar: 'https://www.frejoux-photographe.fr/wp-content/gallery/portrait-pro-corporate/Photographe-portrait-entreprise-pro-Corporate-toulon-Celine.jpg' },
  { id: '2', name: 'Bob', avatar: 'https://puncdium.fr/wp-content/uploads/2021/12/Photo-PUNCDIUM-SS_019A7643-copy.jpg' },
  { id: '3', name: 'Charlie', avatar: 'https://www.frejoux-photographe.fr/wp-content/gallery/portrait-pro-corporate/Photographe-portrait-entreprise-pro-Corporate-toulon-Peggy.jpg' },
  { id: '4', name: 'David', avatar: 'https://www.sophiebourgeixphotographe.com/wp-content/uploads/2016/10/01portraits-professionnel-sophie-bourgeix-2-e1481494048320.jpg' },
  { id: '5', name: 'Eve', avatar: 'https://storage.canalblog.com/50/89/1228697/127715041.jpg' },
]

export default function VulnerabilityCard({
  item,
  index,
  isSelected,
  toggleSelection,
  setSelectedVulnerability,
  setIsDetailDialogOpen,
  handleDeleteVulnerability
}: VulnerabilityCardProps) {
  const getSeverityColor = (severity: Severity) => {
    switch (severity) {
      case 'Critical':
        return 'bg-red-500 text-white'
      case 'High':
        return 'bg-orange-500 text-white'
      case 'Medium':
        return 'bg-yellow-500 text-white'
      case 'Low':
        return 'bg-blue-500 text-white'
      default:
        return 'bg-gray-500 text-white'
    }
  }

  const getAvatarByName =(name: string): string | null => {
    const user = initialUsers.find(user => user.name === name);
    return user ? user.avatar : null; 
  }
  return (
    <Draggable draggableId={item.id.toString()} index={index}>
      {(provided) => (
        <div
          ref={provided.innerRef}
          {...provided.draggableProps}
          {...provided.dragHandleProps}
        >
          <Card className="mb-2 cursor-pointer">
            <CardContent className="p-2">
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center gap-2">
                  <Checkbox
                    checked={isSelected}
                    onCheckedChange={() => toggleSelection(item.id)}
                  />
                  <Badge className={getSeverityColor(item.severity)}>
                    {item.severity}
                  </Badge>
                </div>
                <span className="text-sm">{item.score}</span>
              </div>
              <p className="text-sm font-medium">{item.title}</p>
              <div className="flex items-center justify-between mt-2">
                <Badge variant="outline" className="text-xs">
                  {item.type}
                </Badge>
                <div className='flex items-center gap-1'>
                  <TooltipProvider>
                    <Tooltip>
                      <TooltipTrigger asChild>
                        <div className="flex -space-x-2">
                           {item.assignedTo.map((user, index) => {
                            const avatar = getAvatarByName(user);
                            return (
                              <img
                                key={index}
                                className="w-6 h-6 rounded-full border-2 border-white"
                                src={avatar || 'https://studio-mir.fr/wp-content/uploads/2022/01/Studio-Mir-17220001.jpg'}
                                alt={user}
                              />
                            );
                          })}
                        </div>
                      </TooltipTrigger>
                      <TooltipContent>
                        <p>{item.assignedTo.join(', ')}</p>
                      </TooltipContent>
                    </Tooltip>
                  </TooltipProvider>
                </div>
              </div>
              <div className="text-xs mt-1 flex justify-between items-center">
                <span>{format(item.startDate, 'PP')} - {format(item.endDate, 'PP')}</span>
                <div className="flex items-center gap-2">
                  {item.priority && (
                    <TooltipProvider>
                      <Tooltip>
                        <TooltipTrigger asChild>
                          <Flag className="h-4 w-4 text-red-500" />
                        </TooltipTrigger>
                        <TooltipContent>
                          <p>High Priority</p>
                        </TooltipContent>
                      </Tooltip>
                    </TooltipProvider>
                  )}
                  {differenceInDays(item.endDate, new Date()) <= 3 && (
                    <TooltipProvider>
                      <Tooltip>
                        <TooltipTrigger asChild>
                          <Clock className="h-4 w-4 text-yellow-500" />
                        </TooltipTrigger>
                        <TooltipContent>
                          <p>Due Soon</p>
                        </TooltipContent>
                      </Tooltip>
                    </TooltipProvider>
                  )}
                  <DropdownMenu>
                    <DropdownMenuTrigger asChild>
                      <Button variant="ghost" className="h-8 w-8 p-0">
                        <MoreVertical className="h-4 w-4" />
                      </Button>
                    </DropdownMenuTrigger>
                    <DropdownMenuContent align="end">
                      <DropdownMenuItem onClick={() => {
                        setSelectedVulnerability(item)
                        setIsDetailDialogOpen(true)
                      }}>
                        <Edit3 className="mr-2 h-4 w-4" />
                        <span>Edit</span>
                      </DropdownMenuItem>
                      <DropdownMenuItem onClick={() => handleDeleteVulnerability(item.id)}>
                        <Trash2 className="mr-2 h-4 w-4" />
                        <span>Delete</span>
                      </DropdownMenuItem>
                    </DropdownMenuContent>
                  </DropdownMenu>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      )}
    </Draggable>
  )
}